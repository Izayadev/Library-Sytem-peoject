# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'login1.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sqlite3
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Frame(object):

    # Variable to connect with main window
    global id, done
    id=0
    done=0

    # Connect wiht database
    def Db_Connect(self):
        # Connect Between Database and Programe.
        self.db = sqlite3.connect("Library_Database.db")
        self.cur = self.db.cursor()
        print("Connected!")
    
    

    def setupUi(self, Frame):
        # Connect with database
        self.Db_Connect()

        
        Frame.setObjectName("Frame")
        Frame.resize(445, 545)

        # Clear window
        flags = QtCore.Qt.WindowFlags(QtCore.Qt.FramelessWindowHint | QtCore.Qt.WindowStaysOnTopHint)
        Frame.setWindowFlags(flags)
        Frame.setAttribute(QtCore.Qt.WA_TranslucentBackground)

        Frame.setStyleSheet("/*\n"
"Neon Style Sheet for QT Applications (QpushButton)\n"
"Author: Jaime A. Quiroga P.\n"
"Company: GTRONICK\n"
"Last updated: 24/10/2020, 15:42.\n"
"Available at: https://github.com/GTRONICK/QSS/blob/master/NeonButtons.qss\n"
"*/\n"
"QPushButton{\n"
"    border-style: solid;\n"
"    border-color: #050a0e;\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: #d3dae3;\n"
"    padding: 2px;\n"
"    background-color: #100E19;\n"
"}\n"
"QPushButton::default{\n"
"    border-style: solid;\n"
"    border-color: #050a0e;\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: #FFFFFF;\n"
"    padding: 2px;\n"
"    background-color: #151a1e;\n"
"}\n"
"QPushButton:hover{\n"
"    border-style: solid;\n"
"    border-top-color: qlineargradient(spread:pad, x1:0, y1:1, x2:1, y2:1, stop:0 #C0DB50, stop:0.4 #C0DB50, stop:0.5 #100E19, stop:1 #100E19);\n"
"    border-bottom-color: qlineargradient(spread:pad, x1:0, y1:1, x2:1, y2:1, stop:0 #100E19, stop:0.5 #100E19, stop:0.6 #C0DB50, stop:1 #C0DB50);\n"
"    border-left-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #C0DB50, stop:0.3 #C0DB50, stop:0.7 #100E19, stop:1 #100E19);\n"
"    border-right-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 #C0DB50, stop:0.3 #C0DB50, stop:0.7 #100E19, stop:1 #100E19);\n"
"    border-width: 2px;\n"
"    border-radius: 1px;\n"
"    color: #d3dae3;\n"
"    padding: 2px;\n"
"}\n"
"QPushButton:pressed{\n"
"    border-style: solid;\n"
"    border-top-color: qlineargradient(spread:pad, x1:0, y1:1, x2:1, y2:1, stop:0 #d33af1, stop:0.4 #d33af1, stop:0.5 #100E19, stop:1 #100E19);\n"
"    border-bottom-color: qlineargradient(spread:pad, x1:0, y1:1, x2:1, y2:1, stop:0 #100E19, stop:0.5 #100E19, stop:0.6 #d33af1, stop:1 #d33af1);\n"
"    border-left-color: qlineargradient(spread:pad, x1:0, y1:0, x2:0, y2:1, stop:0 #d33af1, stop:0.3 #d33af1, stop:0.7 #100E19, stop:1 #100E19);\n"
"    border-right-color: qlineargradient(spread:pad, x1:0, y1:1, x2:0, y2:0, stop:0 #d33af1, stop:0.3 #d33af1, stop:0.7 #100E19, stop:1 #100E19);\n"
"    border-width: 2px;\n"
"    border-radius: 1px;\n"
"    color: #d3dae3;\n"
"    padding: 2px;\n"
"}")
        self.widget = QtWidgets.QWidget(Frame)
        self.widget.setGeometry(QtCore.QRect(30, 30, 370, 480))
        self.widget.setObjectName("widget")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setGeometry(QtCore.QRect(30, 40, 320, 420))
        self.label.setStyleSheet("border-radius:20px;\n"
"background-image: url(:/images/bg_login2.jpeg);\n"
"")
        self.label.setText("")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.widget)
        self.label_2.setGeometry(QtCore.QRect(40, 80, 300, 380))
        self.label_2.setStyleSheet("border-radius:20px;\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(0, 0, 0, 166), stop:1 rgba(0, 0, 0, 130));\n"
"background-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:1, stop:0 rgba(0, 0, 0, 112), stop:1 rgba(0, 0, 0, 130));")
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.label_4 = QtWidgets.QLabel(self.widget)
        self.label_4.setGeometry(QtCore.QRect(135, 95, 90, 40))
        font = QtGui.QFont()
        font.setFamily("Ubuntu")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("color: rgba(255, 255, 255,200);")
        self.label_4.setObjectName("label_4")
        self.lineEdit = QtWidgets.QLineEdit(self.widget)
        self.lineEdit.setGeometry(QtCore.QRect(80, 165, 200, 40))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("background-color:rgba(0, 0, 0, 0);\n"
"border:none;\n"
"border-bottom:2px solid rgba(105, 110,  132, 255);\n"
"color:rgba(255, 255, 255, 200);\n"
"padding-bottom:2px;")
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.widget)
        self.lineEdit_2.setGeometry(QtCore.QRect(80, 230, 200, 40))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setStyleSheet("background-color:rgba(0, 0, 0, 0);\n"
"border:none;\n"
"border-bottom:2px solid rgba(105, 110,  132, 255);\n"
"color:rgba(255, 255, 255, 200);\n"
"padding-bottom:2px;")
        self.lineEdit_2.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setGeometry(QtCore.QRect(80, 310, 200, 40))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("")
        self.pushButton.setObjectName("pushButton")
        self.label_5 = QtWidgets.QLabel(self.widget)
        self.label_5.setGeometry(QtCore.QRect(80, 360, 150, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("color: rgba(255, 255, 255,200);")
        self.label_5.setObjectName("label_5")
        self.pushButton_2 = QtWidgets.QPushButton(self.widget)
        self.pushButton_2.setGeometry(QtCore.QRect(230, 355, 50, 30))
        self.pushButton_2.setObjectName("pushButton_2")

        self.retranslateUi(Frame)

        # Make a Shadwo
        self.label.setGraphicsEffect(QtWidgets.QGraphicsDropShadowEffect(blurRadius=25, xOffset=0, yOffset=0, color=QtGui.QColor(234, 221, 185, 100)))
        self.label_2.setGraphicsEffect(QtWidgets.QGraphicsDropShadowEffect(blurRadius=25, xOffset=0, yOffset=0, color=QtGui.QColor(105, 118, 132, 100)))
        self.pushButton.setGraphicsEffect(QtWidgets.QGraphicsDropShadowEffect(blurRadius=25, xOffset=3, yOffset=3, color=QtGui.QColor(105, 118, 132, 100)))

        QtCore.QMetaObject.connectSlotsByName(Frame)

        # Handle login buttons
        self.pushButton.clicked.connect(self.login)

    # Handle login
    def login(self):
        global id, done

        accses=[0, 0]
        bitaData=[]
        username = self.lineEdit.text()
        password = self.lineEdit_2.text()
        bitaData.append(username)
        bitaData.append(password)

        # Check my own username & password
        if username=='admin' and password=='000':
            print(username)
            print(password)
            its_me=1
            accses[0]=its_me
            #### Insert data into database
            # Generate id
            self.cur.execute("select * from login")
            id = len( self.cur.fetchall() )+1

            # Check is There another id same and fix it
            self.cur.execute("select * from login")
            count_id = len( self.cur.fetchall() )
            
            if count_id > 0:
                id+=1
            self.cur.executemany("insert into login values (?,?,?,?,?)",[(
                id, username, password, 1, 0
            )])
            
            self.db.commit()
            
        else:
            print(username)
            print(password)
            # Check data to login
            self.cur.execute("select password, name from employee where name = '{}' and Password = '{}'".format(username, password))
            data = self.cur.fetchall()

            if len( data ) != 0:
                print(" Login Done")

                #### Insert data into database
                # Generate id
                self.cur.execute("select * from login")
                id = len( self.cur.fetchall() )+1

                # Check is There another id same and fix it
                self.cur.execute("select * from login")
                count_id = len( self.cur.fetchall() )
                
                if count_id > 0:
                    id+=1
                self.cur.executemany("insert into login values (?,?,?,?,?)",[(
                    id, username, password, 0, 0
                )])
                self.db.commit()

                
        
            else:
                print("There is no account with this {} username".format(username))
  


        done=1
        QtWidgets.qApp.quit()

    def retranslateUi(self, Frame):
        _translate = QtCore.QCoreApplication.translate
        Frame.setWindowTitle(_translate("Frame", "Frame"))
        self.label_4.setText(_translate("Frame", "Log In"))
        self.lineEdit.setPlaceholderText(_translate("Frame", " User Name"))
        self.lineEdit_2.setPlaceholderText(_translate("Frame", " Password"))
        self.pushButton.setText(_translate("Frame", "L o g  I n"))
        self.label_5.setText(_translate("Frame", "Forget your password !?"))
        self.pushButton_2.setText(_translate("Frame", "Reseat"))

        
import Image_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Frame = QtWidgets.QFrame()
    ui = Ui_Frame()
    ui.setupUi(Frame)
    Frame.show()
    sys.exit(app.exec_())
